name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
  - cron: '0 0 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  main:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          triple: x86_64-unknown-linux-gnu
        - os: windows-latest
          triple: x86_64-pc-windows-msvc
        - os: macOS-latest
          triple: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - run: "rustup component add clippy"
    - run: "rustup component add rust-src --toolchain nightly-${{ matrix.triple }}"
    - uses: actions/checkout@v2
    - run: "cargo build --verbose --workspace"
    - run: "cargo test --verbose --workspace --tests"
    - run: "cargo test --verbose --workspace --doc"
    - run: "cargo doc --verbose --workspace"
    - run: "cargo build --verbose --workspace --release"
    - run: "cargo test --verbose --workspace --examples"
    - run: "cargo outdated --verbose --aggresssive --root-deps-only --exit-code 1"
    - run: "cargo clippy --verbose"
    - run: "cargo +nightly build --verbose -Z build-std=core,alloc,panic_abort --target ${{ matrix.triple }} --release"
      working-directory: ensure_no_std
  crosscompilation:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        target: [x86_64-unknown-linux-gnu, i686-unknown-linux-gnu, x86_64-pc-windows-gnu, i686-pc-windows-gnu]
        exclude:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        - os: macOS-latest
          target: x86_64-apple-darwin
        - os: macOS-latest
          target: i686-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - run: "rustup target add ${{ matrix.target }}"
    - run: "sudo apt-get install -y gcc-multilib"
      if: "${{ matrix.os == 'ubuntu-latest' }}"
    - run: "sudo apt-get install -y pkg-config-x86-64-linux-gnux32"
      if: "${{ matrix.os == 'ubuntu-latest' }}"
    - run: "brew tap SergioBenitez/osxct"
      if: "${{ matrix.os == 'macOS-latest' }}"
    - run: "brew install x86_64-unknown-linux-gnu"
      if: "${{ matrix.os == 'macOS-latest' }}"
    - uses: actions/checkout@v2
    - run: "cargo build --verbose --workspace --target=${{ matrix.target }}"
      env:
        CC_x86_64_unknown_linux_gnu: x86_64-unknown-linux-gnu-gcc
    - run: "cargo build --verbose --workspace --target=${{ matrix.target }} --release"
      env:
        CC_x86_64_unknown_linux_gnu: x86_64-unknown-linux-gnu-gcc
