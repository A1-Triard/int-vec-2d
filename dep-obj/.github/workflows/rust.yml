name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [nightly]
        features: ["", "--features=std"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    - name: build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: "--verbose --no-default-features ${{ matrix.features }}"
    - name: test --tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: "--verbose --tests"
      if: "${{ matrix.features == '--features=std' }}"
    - name: test --doc
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: "--verbose --doc"
      if: "${{ matrix.features == '--features=std' }}"
    - name: doc
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: "--verbose"
      if: "${{ matrix.features == '--features=std' }}"
    - name: test --docsrs
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: "--verbose --doc"
      env:
        RUSTFLAGS: "--cfg docsrs"
        RUSTDOCFLAGS: "--cfg docsrs"
      if: "${{ matrix.features == '--features=std' }}"
    - name: --docsrs
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: "--verbose"
      env:
        RUSTFLAGS: "--cfg docsrs"
        RUSTDOCFLAGS: "--cfg docsrs"
      if: "${{ matrix.features == '--features=std' }}"
    - name: build --release
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: "--verbose --release --no-default-features ${{ matrix.features }}"
    - name: test --example rs_trigger
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: "--verbose --example rs_trigger"
      if: "${{ matrix.features == '--features=std' }}"
